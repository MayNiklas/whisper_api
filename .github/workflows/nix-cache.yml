name: "build nix binary cache"
on:
  push:
jobs:
  build_dev_shell:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # copy nix-sign-key to /tmp
      - shell: bash
        env:
          nix_sign_key: ${{ secrets.nix_sign_key }}
        run: |
          echo $nix_sign_key > /tmp/nix-sign-key

      # install nix - use nix
      - uses: cachix/install-nix-action@v19
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            secret-key-files = /tmp/nix-sign-key
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= cache.lounge.rocks:uXa8UuAEQoKFtU8Om/hq6d7U+HgcrduTVr8Cfl6JuaY=
            substituters = https://cache.nixos.org/ https://cache.lounge.rocks?priority=100

      - shell: bash
        name: "build and upload package to s3"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          nix copy --to 's3://nix-cache?scheme=https&region=eu-central-1&endpoint=s3.lounge.rocks&compression=zstd&parallel-compression=true' $(nix build .#packages.x86_64-linux.whisper_api --json | jq -r '.[].outputs | to_entries[].value')

      - shell: bash
        name: "build and upload devShell to s3"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          nix copy --to 's3://nix-cache?scheme=https&region=eu-central-1&endpoint=s3.lounge.rocks&compression=zstd&parallel-compression=true' $(nix build .#devShells.x86_64-linux.default --json | jq -r '.[].outputs | to_entries[].value')
